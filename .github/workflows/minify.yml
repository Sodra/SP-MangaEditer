name: Minify files and copy non-minified items

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: |
        npm install -g html-minifier-terser
        npm install -g clean-css-cli
        npm install -g terser

    - name: Minify HTML files
      run: |
        find original -type f -name "*.html" | while read file; do
          dir=$(dirname "${file#original/}")
          echo "Creating directory: $dir"
          mkdir -p "$dir"
          echo "Minifying $file to ${file#original/}"
          html-minifier-terser "$file" -o "${file#original/}" --collapse-whitespace --remove-comments --minify-css true --minify-js true
        done

    - name: Minify CSS files
      run: |
        find original -type f -name "*.css" | while read file; do
          dir=$(dirname "${file#original/}")
          echo "Creating directory: $dir"
          mkdir -p "$dir"
          echo "Minifying $file to ${file#original/}"
          cleancss -o "${file#original/}" "$file"
        done

    - name: Minify JS files
      run: |
        find original -type f -name "*.js" | while read file; do
          dir=$(dirname "${file#original/}")
          echo "Creating directory: $dir"
          mkdir -p "$dir"
          echo "Minifying $file to ${file#original/}"
          terser "$file" -o "${file#original/}"
        done

    - name: Copy non-minified files and folders
      run: |
        find original -maxdepth 1 -mindepth 1 | while read item; do
          if [[ "$item" != *"/css" && "$item" != *"/html" && "$item" != *"/js" && "$item" != *"/test" && "$item" != *"/third" && "$item" != *"/index.html" ]]; then
            echo "Copying $item"
            cp -r "$item" .
          fi
        done

    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add .
        git status
        git commit -m 'Minify files and copy non-minified items from original directory' || echo "No changes to commit"
        git pull --rebase origin main
        git push

    - name: Deploy Pages
      id: deploy_pages
      uses: actions/deploy-pages@v4

    - name: Check deployment status
      if: always()
      run: |
        DEPLOYMENT_STATUS=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                               -H "Accept: application/vnd.github.v3+json" \
                               https://api.github.com/repos/${{ github.repository }}/pages/deployments/${{ steps.deploy_pages.outputs.deployment_id }} | jq -r '.status')
        echo "Deployment status: $DEPLOYMENT_STATUS"
        if [ "$DEPLOYMENT_STATUS" != "active" ]; then
          echo "Canceling deployment..."
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/pages/deployments/${{ steps.deploy_pages.outputs.deployment_id }}/cancel
        else
          echo "Deployment already active, no need to cancel."
        fi
